<html>
  <head>
    <title></title>
    <style>
    
      widget#touch-inspector 
      {
        prototype: TouchInspector;
        size:*;
        border:4dip solid black;
        margin:1em;
      }
      
      widget#touch-inspector.active { border-color:red; }
      widget#touch-inspector.inertia { background-color:yellow; }

        div#out {
            height:300dip;
            overflow:auto;
        }

    </style>
    <script>

    const out = document.$("div#out");

    class TouchInspector extends Element {

      ["on gesturerequest"](evt) {
        evt.data    = Event.GESTURE_FLAG_ZOOM
                    | Event.GESTURE_FLAG_ROTATE
                    | Event.GESTURE_FLAG_PAN_VERTICAL
                    | Event.GESTURE_FLAG_PAN_HORIZONTAL
                    | Event.GESTURE_FLAG_TAP1
                    | Event.GESTURE_FLAG_TAP2

                    | Event.GESTURE_FLAG_PAN_WITH_GUTTER  // PAN modifiers
                    | Event.GESTURE_FLAG_PAN_WITH_INERTIA //
                    ;

      }

      ["on gesturestart"]() { return this.show("start"); }
      ["on gestureend"]() { return this.show("end"); }

      ["on gesturezoom"]() { return this.show(`zoom ${evt.deltaV}`); }
      ["on gesturerotate"]() { return this.show(`rotate ${evt.deltaV}`); }
      ["on gesturepan"]() { return this.show(`pan ${evt.deltaX} ${evt.deltaY}`); }

      ["on gesturetap1"]() { return this.show(`tap1`); }
      ["on gesturetap2"]() { return this.show(`tap2`); }

      show(msg) {
        out.prepend(<text>{msg}</text>);
        if( out.childElementCount > 30 )
          out.lastElementChild.remove();
      }
    }
    </script>
  </head>
<body>
  <p>area below is touchable</p>
  <widget #touch-inspector>
    <div>Touch area</div>
  </widget>
  <div #out></div>

</body>
</html>
